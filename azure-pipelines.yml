# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

strategy:
  matrix:
    linux:
      imageName: "ubuntu-18.04"
    mac:
      imageName: "macos-10.15"
    windows:
      imageName: "windows-2019"

pool:
  vmImage: $(imageName)

steps:

# Universal
- bash: |
    git clone --branch develop --depth 1 https://github.com/matrix-org/matrix-js-sdk.git
    cd matrix-js-sdk/
    yarn install && yarn link
    cd ..
    git clone --branch develop --depth 1 https://github.com/matrix-org/matrix-react-sdk.git
    cd matrix-react-sdk/
    yarn link matrix-js-sdk
    yarn link && yarn install
    cd ..
    git clone --branch develop --depth 1 https://github.com/vector-im/riot-web.git
    cd riot-web/ 
    yarn link matrix-js-sdk && yarn link matrix-react-sdk
    curl https://riot.im/develop/config.json
    #curl https://riot.im/develop/config.json | jq '.features += {"feature_event_indexing": "labs"}' > config.json

# Linux
- bash: |
    cd riot-web/ 
    elecversion=$(cat package.json | jq '.build.electronVersion' | sed 's/"//g') 
    yarn install
    yarn build
    yarn build:electron:linux
  condition: eq( variables['Agent.OS'], 'Linux' )
  displayName: Linux Build

# Windows
- bash: |
    cd riot-web/ 
    elecversion=$(cat package.json | jq '.build.electronVersion' | sed 's/"//g') 
    jq 'del(.build.win.sign)' package.json > package.json.new
    rm package.json && mv package.json.new package.json
    yarn install
    yarn build
    yarn build:electron:windows
  condition: eq( variables['Agent.OS'], 'Windows_NT' )
  displayName: Windows Build

# mac
- bash: |
    cd riot-web/ 
    elecversion=$(cat package.json | jq '.build.electronVersion' | sed 's/"//g') 
    jq 'del(.build.afterSign)' package.json > package.json.new
    rm package.json && mv package.json.new package.json
    yarn install
    yarn build
    yarn build:electron:macos -c.mac.identity=null
  condition: eq( variables['Agent.OS'], 'Darwin' )
  displayName: macos Build


- publish: $(System.DefaultWorkingDirectory)/riot-web/electron_app/dist/
  artifact: Riot_$(Agent.OS)
  displayName: Publish
