# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

strategy:
  matrix:
    linux:
      imageName: "ubuntu-latest"
    # mac:
    #   imageName: "macos-10.14"
    windows:
      imageName: "vs2017-win2016"

pool:
  vmImage: $(imageName)

steps:
# Linux
- bash: |
    docker build -t riot .
    docker run --rm -v $(Build.ArtifactStagingDirectory):/data riot linux
  condition: eq( variables['Agent.OS'], 'Linux' )
  displayName: Linux Build

# Windows
- bash: |
    git clone --branch develop --depth 1 https://github.com/matrix-org/matrix-js-sdk.git
    cd matrix-js-sdk/
    yarn install && yarn link
    cd ..
    git clone --branch develop --depth 1 https://github.com/matrix-org/matrix-react-sdk.git
    cd matrix-react-sdk/
    yarn link matrix-js-sdk
    yarn link && yarn install
    cd ..
    git clone --branch develop --depth 1 https://github.com/vector-im/riot-web.git
    cd riot-web/ 
    elecversion=$(cat package.json | jq '.build.electronVersion' | sed 's/"//g') 
    yarn link matrix-js-sdk && yarn link matrix-react-sdk
    jq 'del(.build.win.sign)' package.json > package.json.new
    rm package.json && mv package.json.new package.json
    yarn install \
    cp config.sample.json config.json
    sed -i -e 's/"showLabsSettings": false,/"showLabsSettings": true,/g' config.json
    yarn build
    yarn build:electron:windows
    cp -r electron_app/dist/ $(Build.ArtifactStagingDirectory)
  condition: eq( variables['Agent.OS'], 'Windows_NT' )
  displayName: Windows Build

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)/dist/'
    artifactName: Linux_Build
  condition: eq( variables['Agent.OS'], 'Linux' )
  displayName: Publish Linux Artifacts

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)/'
    artifactName: Windows_Build
  condition: eq( variables['Agent.OS'], 'Windows_NT' )
  displayName: Publish Windows Artifacts
